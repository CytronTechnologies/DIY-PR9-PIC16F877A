

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 21 15:17:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0088                     	;# 
    70  0089                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  008E                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0094                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90                           
    91                           	psect	idataBANK0
    92  0455                     __pidataBANK0:	
    93                           
    94                           ;initializer for _stalled_char
    95  0455  3431               	retlw	49
    96  0456  3432               	retlw	50
    97  0457  3433               	retlw	51
    98  0458  3434               	retlw	52
    99  0459  3435               	retlw	53
   100  045A  3436               	retlw	54
   101  0007                     _PORTC	set	7
   102  0008                     _PORTD	set	8
   103  0028                     _RA0	set	40
   104  0029                     _RA1	set	41
   105  002A                     _RA2	set	42
   106  002B                     _RA3	set	43
   107  002C                     _RA4	set	44
   108  002D                     _RA5	set	45
   109  0031                     _RB1	set	49
   110  0032                     _RB2	set	50
   111  0038                     _RC0	set	56
   112  0039                     _RC1	set	57
   113  003A                     _RC2	set	58
   114  003B                     _RC3	set	59
   115  0048                     _RE0	set	72
   116  0049                     _RE1	set	73
   117  009F                     _ADCON1	set	159
   118  0085                     _TRISA	set	133
   119  0086                     _TRISB	set	134
   120  0087                     _TRISC	set	135
   121  0088                     _TRISD	set	136
   122  0089                     _TRISE	set	137
   123                           
   124                           	psect	strings
   125  0003                     __pstrings:	
   126  0003                     stringtab:	
   127  0003                     __stringtab:	
   128  0003                     stringcode:	
   129                           ;	String table - string pointers are 1 byte each
   130                           
   131  0003                     stringdir:	
   132  0003  3000               	movlw	high stringdir
   133  0004  008A               	movwf	10
   134  0005  0804               	movf	4,w
   135  0006  0A84               	incf	4,f
   136  0007  0782               	addwf	2,f
   137  0008                     __stringbase:	
   138  0008  3400               	retlw	0
   139  0009                     __end_of__stringtab:	
   140  0009                     STR_2:	
   141  0009  3436               	retlw	54	;'6'
   142  000A  342D               	retlw	45	;'-'
   143  000B  3444               	retlw	68	;'D'
   144  000C  3449               	retlw	73	;'I'
   145  000D  3447               	retlw	71	;'G'
   146  000E  3449               	retlw	73	;'I'
   147  000F  3454               	retlw	84	;'T'
   148  0010  3420               	retlw	32	;' '
   149  0011  3450               	retlw	80	;'P'
   150  0012  3441               	retlw	65	;'A'
   151  0013  3453               	retlw	83	;'S'
   152  0014  3453               	retlw	83	;'S'
   153  0015  3457               	retlw	87	;'W'
   154  0016  344F               	retlw	79	;'O'
   155  0017  3452               	retlw	82	;'R'
   156  0018  3444               	retlw	68	;'D'
   157  0019  3400               	retlw	0
   158  001A                     STR_1:	
   159  001A  3450               	retlw	80	;'P'
   160  001B  344C               	retlw	76	;'L'
   161  001C  3445               	retlw	69	;'E'
   162  001D  3441               	retlw	65	;'A'
   163  001E  3453               	retlw	83	;'S'
   164  001F  3445               	retlw	69	;'E'
   165  0020  3420               	retlw	32	;' '
   166  0021  3445               	retlw	69	;'E'
   167  0022  344E               	retlw	78	;'N'
   168  0023  3454               	retlw	84	;'T'
   169  0024  3445               	retlw	69	;'E'
   170  0025  3452               	retlw	82	;'R'
   171  0026  3400               	retlw	0
   172  0027                     STR_3:	
   173  0027  3453               	retlw	83	;'S'
   174  0028  3455               	retlw	85	;'U'
   175  0029  3443               	retlw	67	;'C'
   176  002A  3443               	retlw	67	;'C'
   177  002B  3445               	retlw	69	;'E'
   178  002C  3453               	retlw	83	;'S'
   179  002D  3453               	retlw	83	;'S'
   180  002E  3421               	retlw	33	;'!'
   181  002F  3400               	retlw	0
   182  0030                     STR_4:	
   183  0030  3445               	retlw	69	;'E'
   184  0031  3452               	retlw	82	;'R'
   185  0032  3452               	retlw	82	;'R'
   186  0033  344F               	retlw	79	;'O'
   187  0034  3452               	retlw	82	;'R'
   188  0035  3421               	retlw	33	;'!'
   189  0036  3400               	retlw	0
   190                           
   191                           ; #config settings
   192  0000                     
   193                           	psect	cinit
   194  07D3                     start_initialization:	
   195  07D3                     __initialization:	
   196                           
   197                           ; Clear objects allocated to COMMON
   198  07D3  01FC               	clrf	__pbssCOMMON& (0+127)
   199                           
   200                           ; Clear objects allocated to BANK0
   201  07D4  01A0               	clrf	__pbssBANK0& (0+127)
   202  07D5  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   203  07D6  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   204  07D7  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   205  07D8  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   206  07D9  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   207                           
   208                           ; Initialize objects allocated to BANK0
   209  07DA  120A  118A  2455  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   210  07DF  00A6               	movwf	__pdataBANK0& (0+127)
   211  07E0  120A  118A  2456  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   212  07E5  00A7               	movwf	(__pdataBANK0+1)& (0+127)
   213  07E6  120A  118A  2457  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   214  07EB  00A8               	movwf	(__pdataBANK0+2)& (0+127)
   215  07EC  120A  118A  2458  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   216  07F1  00A9               	movwf	(__pdataBANK0+3)& (0+127)
   217  07F2  120A  118A  2459  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   218  07F7  00AA               	movwf	(__pdataBANK0+4)& (0+127)
   219  07F8  120A  118A  245A   	fcall	__pidataBANK0+5	;fetch initializer
   220  07FB  00AB               	movwf	(__pdataBANK0+5)& (0+127)
   221  07FC                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224  07FC                     __end_of__initialization:	
   225  07FC  0183               	clrf	3
   226  07FD  120A  118A  2EFC   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMMON
   229  007C                     __pbssCOMMON:	
   230  007C                     _password_count:	
   231  007C                     	ds	1
   232                           
   233                           	psect	bssBANK0
   234  0020                     __pbssBANK0:	
   235  0020                     _keyin_char:	
   236  0020                     	ds	6
   237                           
   238                           	psect	dataBANK0
   239  0026                     __pdataBANK0:	
   240  0026                     _stalled_char:	
   241  0026                     	ds	6
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:	
   245  0070                     ?_send_config:	
   246  0070                     ?_lcd_clr:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_delay:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_lcd_goto:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_send_string:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_clearcolumn1:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ??_clearcolumn1:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_scanrow1:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_clearcolumn2:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ??_clearcolumn2:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_scanrow2:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_clearcolumn3:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ??_clearcolumn3:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_scanrow3:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_clearcolumn4:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ??_clearcolumn4:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_scanrow4:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_beep_once:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_beep_twice:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_send_char:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_e_pulse:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     delay@data:	
   310                           ; 0 bytes @ 0x0
   311                           
   312                           
   313                           ; 4 bytes @ 0x0
   314  0070                     	ds	4
   315  0074                     ??_delay:	
   316                           
   317                           ; 0 bytes @ 0x4
   318  0074                     	ds	4
   319  0078                     ??_send_config:	
   320  0078                     ??_beep_once:	
   321                           ; 0 bytes @ 0x8
   322                           
   323  0078                     ??_beep_twice:	
   324                           ; 0 bytes @ 0x8
   325                           
   326  0078                     ??_send_char:	
   327                           ; 0 bytes @ 0x8
   328                           
   329  0078                     ??_e_pulse:	
   330                           ; 0 bytes @ 0x8
   331                           
   332  0078                     send_config@data:	
   333                           ; 0 bytes @ 0x8
   334                           
   335  0078                     send_char@data:	
   336                           ; 1 bytes @ 0x8
   337                           
   338                           
   339                           ; 1 bytes @ 0x8
   340  0078                     	ds	1
   341  0079                     ??_lcd_clr:	
   342  0079                     ??_lcd_goto:	
   343                           ; 0 bytes @ 0x9
   344                           
   345  0079                     ??_send_string:	
   346                           ; 0 bytes @ 0x9
   347                           
   348                           
   349                           ; 0 bytes @ 0x9
   350  0079                     	ds	1
   351  007A                     lcd_goto@data:	
   352  007A                     send_string@i:	
   353                           ; 1 bytes @ 0xA
   354                           
   355                           
   356                           ; 1 bytes @ 0xA
   357  007A                     	ds	1
   358  007B                     ??_scanrow1:	
   359  007B                     ??_scanrow2:	
   360                           ; 0 bytes @ 0xB
   361                           
   362  007B                     ??_scanrow3:	
   363                           ; 0 bytes @ 0xB
   364                           
   365  007B                     ??_scanrow4:	
   366                           ; 0 bytes @ 0xB
   367                           
   368  007B                     send_string@s:	
   369                           ; 0 bytes @ 0xB
   370                           
   371                           
   372                           ; 1 bytes @ 0xB
   373  007B                     	ds	1
   374  007C                     ??_main:	
   375                           
   376                           	psect	maintext
   377  06FC                     __pmaintext:	
   378                           ; 0 bytes @ 0xC
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 80 in file "../../Source file/PR9A.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;		None               void
   391 ;; Registers used:
   392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels required when called:    5
   404 ;; This function calls:
   405 ;;		_beep_once
   406 ;;		_beep_twice
   407 ;;		_clearcolumn1
   408 ;;		_clearcolumn2
   409 ;;		_clearcolumn3
   410 ;;		_clearcolumn4
   411 ;;		_delay
   412 ;;		_lcd_clr
   413 ;;		_lcd_goto
   414 ;;		_scanrow1
   415 ;;		_scanrow2
   416 ;;		_scanrow3
   417 ;;		_scanrow4
   418 ;;		_send_config
   419 ;;		_send_string
   420 ;; This function is called by:
   421 ;;		Startup code after reset
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _main
   427  06FC                     _main:	
   428                           
   429                           ;PR9A.c: 82: ADCON1=0b00000110;
   430                           
   431                           ;incstack = 0
   432                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   433  06FC  3006               	movlw	6
   434  06FD  1683               	bsf	3,5	;RP0=1, select bank1
   435  06FE  1303               	bcf	3,6	;RP1=0, select bank1
   436  06FF  009F               	movwf	31	;volatile
   437                           
   438                           ;PR9A.c: 83: TRISA=0b11001111;
   439  0700  30CF               	movlw	207
   440  0701  0085               	movwf	5	;volatile
   441                           
   442                           ;PR9A.c: 84: TRISB=0b00000000;
   443  0702  0186               	clrf	6	;volatile
   444                           
   445                           ;PR9A.c: 85: TRISD=0b00000000;
   446  0703  0188               	clrf	8	;volatile
   447                           
   448                           ;PR9A.c: 86: TRISC=0b11110000;
   449  0704  30F0               	movlw	240
   450  0705  0087               	movwf	7	;volatile
   451                           
   452                           ;PR9A.c: 87: TRISE=0b00000000;
   453  0706  0189               	clrf	9	;volatile
   454                           
   455                           ;PR9A.c: 89: PORTC=0;
   456  0707  1283               	bcf	3,5	;RP0=0, select bank0
   457  0708  1303               	bcf	3,6	;RP1=0, select bank0
   458  0709  0187               	clrf	7	;volatile
   459                           
   460                           ;PR9A.c: 90: PORTD=0;
   461  070A  0188               	clrf	8	;volatile
   462                           
   463                           ;PR9A.c: 91: RB1=0;
   464  070B  1086               	bcf	6,1	;volatile
   465                           
   466                           ;PR9A.c: 92: RB2=0;
   467  070C  1106               	bcf	6,2	;volatile
   468                           
   469                           ;PR9A.c: 93: RC2=0;
   470  070D  1107               	bcf	7,2	;volatile
   471                           
   472                           ;PR9A.c: 94: RC3=0;
   473  070E  1187               	bcf	7,3	;volatile
   474                           
   475                           ;PR9A.c: 96: send_config(0b00001001);
   476  070F  3009               	movlw	9
   477  0710  120A  118A  24B1  120A  118A  	fcall	_send_config
   478                           
   479                           ;PR9A.c: 97: send_config(0b00000010);
   480  0715  3002               	movlw	2
   481  0716  120A  118A  24B1  120A  118A  	fcall	_send_config
   482                           
   483                           ;PR9A.c: 98: send_config(0b00000110);
   484  071B  3006               	movlw	6
   485  071C  120A  118A  24B1  120A  118A  	fcall	_send_config
   486                           
   487                           ;PR9A.c: 99: send_config(0b00001100);
   488  0721  300C               	movlw	12
   489  0722  120A  118A  24B1  120A  118A  	fcall	_send_config
   490                           
   491                           ;PR9A.c: 100: send_config(0b00111000);
   492  0727  3038               	movlw	56
   493  0728  120A  118A  24B1  120A  118A  	fcall	_send_config
   494                           
   495                           ;PR9A.c: 102: lcd_clr();
   496  072D  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   497                           
   498                           ;PR9A.c: 103: delay(1000);
   499  0732  3000               	movlw	0
   500  0733  00F3               	movwf	delay@data+3
   501  0734  3000               	movlw	0
   502  0735  00F2               	movwf	delay@data+2
   503  0736  3003               	movlw	3
   504  0737  00F1               	movwf	delay@data+1
   505  0738  30E8               	movlw	232
   506  0739  00F0               	movwf	delay@data
   507  073A  120A  118A  251E  120A  118A  	fcall	_delay
   508                           
   509                           ;PR9A.c: 104: lcd_goto(0);
   510  073F  3000               	movlw	0
   511  0740  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   512                           
   513                           ;PR9A.c: 105: send_string("PLEASE ENTER");
   514  0745  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   515  0746  120A  118A  24FE  120A  118A  	fcall	_send_string
   516                           
   517                           ;PR9A.c: 106: lcd_goto(20);
   518  074B  3014               	movlw	20
   519  074C  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   520                           
   521                           ;PR9A.c: 107: send_string("6-DIGIT PASSWORD");
   522  0751  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   523  0752  120A  118A  24FE  120A  118A  	fcall	_send_string
   524  0757                     l1195:	
   525                           ;PR9A.c: 110: while(1)
   526                           
   527                           
   528                           ;PR9A.c: 111: {
   529                           ;PR9A.c: 112: clearcolumn1();
   530  0757  120A  118A  245B  120A  118A  	fcall	_clearcolumn1
   531                           
   532                           ;PR9A.c: 113: scanrow1();
   533  075C  120A  118A  2541  120A  118A  	fcall	_scanrow1
   534                           
   535                           ;PR9A.c: 114: clearcolumn2();
   536  0761  120A  118A  2462  120A  118A  	fcall	_clearcolumn2
   537                           
   538                           ;PR9A.c: 115: scanrow2();
   539  0766  120A  118A  25E0  120A  118A  	fcall	_scanrow2
   540                           
   541                           ;PR9A.c: 116: clearcolumn3();
   542  076B  120A  118A  2469  120A  118A  	fcall	_clearcolumn3
   543                           
   544                           ;PR9A.c: 117: scanrow3();
   545  0770  120A  118A  266E  120A  118A  	fcall	_scanrow3
   546                           
   547                           ;PR9A.c: 118: clearcolumn4();
   548  0775  120A  118A  2470  120A  118A  	fcall	_clearcolumn4
   549                           
   550                           ;PR9A.c: 119: scanrow4();
   551  077A  120A  118A  2598  120A  118A  	fcall	_scanrow4
   552                           
   553                           ;PR9A.c: 121: if(password_count==6)
   554  077F  3006               	movlw	6
   555  0780  067C               	xorwf	_password_count,w
   556  0781  1D03               	btfss	3,2
   557  0782  2F57               	goto	l1195
   558                           
   559                           ;PR9A.c: 122: {
   560                           ;PR9A.c: 123: password_count=0;
   561  0783  01FC               	clrf	_password_count
   562                           
   563                           ;PR9A.c: 124: if((keyin_char[0]==stalled_char[0])&&(keyin_char[1]==stalled_char[1])&&
   564                           ;PR9A.c: 125: (keyin_char[2]==stalled_char[2])&&(keyin_char[3]==stalled_char[3])&&
   565                           ;PR9A.c: 126: (keyin_char[4]==stalled_char[4])&&(keyin_char[5]==stalled_char[5]))
   566  0784  1283               	bcf	3,5	;RP0=0, select bank0
   567  0785  1303               	bcf	3,6	;RP1=0, select bank0
   568  0786  0820               	movf	_keyin_char,w
   569  0787  0626               	xorwf	_stalled_char,w
   570  0788  1D03               	skipz
   571  0789  2FB9               	goto	l1237
   572  078A  0821               	movf	_keyin_char+1,w
   573  078B  0627               	xorwf	_stalled_char+1,w
   574  078C  1D03               	skipz
   575  078D  2FB9               	goto	l1237
   576  078E  0822               	movf	_keyin_char+2,w
   577  078F  0628               	xorwf	_stalled_char+2,w
   578  0790  1D03               	skipz
   579  0791  2FB9               	goto	l1237
   580  0792  0823               	movf	_keyin_char+3,w
   581  0793  0629               	xorwf	_stalled_char+3,w
   582  0794  1D03               	skipz
   583  0795  2FB9               	goto	l1237
   584  0796  0824               	movf	_keyin_char+4,w
   585  0797  062A               	xorwf	_stalled_char+4,w
   586  0798  1D03               	skipz
   587  0799  2FB9               	goto	l1237
   588  079A  0825               	movf	_keyin_char+5,w
   589  079B  062B               	xorwf	_stalled_char+5,w
   590  079C  1D03               	skipz
   591  079D  2FB9               	goto	l1237
   592                           
   593                           ;PR9A.c: 127: {
   594                           ;PR9A.c: 128: lcd_clr();
   595  079E  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   596                           
   597                           ;PR9A.c: 129: lcd_goto(0);
   598  07A3  3000               	movlw	0
   599  07A4  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   600                           
   601                           ;PR9A.c: 130: send_string("SUCCESS!");
   602  07A9  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   603  07AA  120A  118A  24FE  120A  118A  	fcall	_send_string
   604                           
   605                           ;PR9A.c: 131: RC2=1;
   606  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   607  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   608  07B1  1507               	bsf	7,2	;volatile
   609                           
   610                           ;PR9A.c: 132: RB1=1;
   611  07B2  1486               	bsf	6,1	;volatile
   612                           
   613                           ;PR9A.c: 133: beep_once();
   614  07B3  120A  118A  2477  120A  118A  	fcall	_beep_once
   615  07B8                     l90:	
   616                           ;PR9A.c: 134: while(1);
   617                           
   618  07B8  2FB8               	goto	l90
   619  07B9                     l1237:	
   620                           ;PR9A.c: 135: }
   621                           
   622                           
   623                           ;PR9A.c: 136: else
   624                           ;PR9A.c: 137: {
   625                           ;PR9A.c: 138: lcd_clr();
   626  07B9  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   627                           
   628                           ;PR9A.c: 139: lcd_goto(0);
   629  07BE  3000               	movlw	0
   630  07BF  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   631                           
   632                           ;PR9A.c: 140: send_string("ERROR!");
   633  07C4  3028               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   634  07C5  120A  118A  24FE  120A  118A  	fcall	_send_string
   635                           
   636                           ;PR9A.c: 141: RC3=1;
   637  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   638  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   639  07CC  1587               	bsf	7,3	;volatile
   640                           
   641                           ;PR9A.c: 142: beep_twice();
   642  07CD  120A  118A  2566  120A  118A  	fcall	_beep_twice
   643  07D2                     l94:	
   644                           ;PR9A.c: 143: while(1);
   645                           
   646  07D2  2FD2               	goto	l94
   647  07D3                     __end_of_main:	
   648                           
   649                           	psect	text1
   650  04FE                     __ptext1:	
   651 ;; *************** function _send_string *****************
   652 ;; Defined at:
   653 ;;		line 374 in file "../../Source file/PR9A.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  s               1    wreg     PTR const unsigned char 
   656 ;;		 -> STR_4(7), STR_3(9), STR_2(17), STR_1(13), 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  s               1   11[COMMON] PTR const unsigned char 
   659 ;;		 -> STR_4(7), STR_3(9), STR_2(17), STR_1(13), 
   660 ;;  i               1   10[COMMON] unsigned char 
   661 ;; Return value:  Size  Location     Type
   662 ;;		None               void
   663 ;; Registers used:
   664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         2       0       0       0       0
   672 ;;      Temps:          1       0       0       0       0
   673 ;;      Totals:         3       0       0       0       0
   674 ;;Total ram usage:        3 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    3
   677 ;; This function calls:
   678 ;;		_send_char
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _send_string
   686  04FE                     _send_string:	
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   690                           ;send_string@s stored from wreg
   691  04FE  00FB               	movwf	send_string@s
   692                           
   693                           ;PR9A.c: 376: unsigned char i=0;
   694  04FF  01FA               	clrf	send_string@i
   695  0500                     l1007:	
   696                           ;PR9A.c: 377: while (s && *s)send_char (*s++);
   697                           
   698  0500  087B               	movf	send_string@s,w
   699  0501  1903               	btfsc	3,2
   700  0502  0008               	return
   701  0503  087B               	movf	send_string@s,w
   702  0504  0084               	movwf	4
   703  0505  120A  118A  2003  120A  118A  	fcall	stringdir
   704  050A  3A00               	xorlw	0
   705  050B  1903               	btfsc	3,2
   706  050C  0008               	return
   707  050D  087B               	movf	send_string@s,w
   708  050E  0084               	movwf	4
   709  050F  120A  118A  2003  120A  118A  	fcall	stringdir
   710  0514  120A  118A  24C8  120A  118A  	fcall	_send_char
   711  0519  3001               	movlw	1
   712  051A  00F9               	movwf	??_send_string
   713  051B  0879               	movf	??_send_string,w
   714  051C  07FB               	addwf	send_string@s,f
   715  051D  2D00               	goto	l1007
   716  051E                     __end_of_send_string:	
   717                           
   718                           	psect	text2
   719  0598                     __ptext2:	
   720 ;; *************** function _scanrow4 *****************
   721 ;; Defined at:
   722 ;;		line 278 in file "../../Source file/PR9A.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;		None               void
   729 ;; Registers used:
   730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0
   739 ;;      Totals:         1       0       0       0       0
   740 ;;Total ram usage:        1 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    4
   743 ;; This function calls:
   744 ;;		_lcd_clr
   745 ;;		_lcd_goto
   746 ;;		_send_char
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _scanrow4
   754  0598                     _scanrow4:	
   755                           
   756                           ;PR9A.c: 281: if(RA1==0)
   757                           
   758                           ;incstack = 0
   759                           ; Regs used in _scanrow4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   760  0598  1283               	bcf	3,5	;RP0=0, select bank0
   761  0599  1303               	bcf	3,6	;RP1=0, select bank0
   762  059A  1885               	btfsc	5,1	;volatile
   763  059B  2DBD               	goto	l174
   764  059C                     l175:	
   765                           ;PR9A.c: 282: {
   766                           ;PR9A.c: 283: while(RA1==0)continue;
   767                           
   768  059C  1C85               	btfss	5,1	;volatile
   769  059D  2D9C               	goto	l175
   770                           
   771                           ;PR9A.c: 284: if(password_count==0)lcd_clr();
   772  059E  087C               	movf	_password_count,w
   773  059F  1D03               	btfss	3,2
   774  05A0  2DA6               	goto	l178
   775  05A1  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   776  05A6                     l178:	
   777                           
   778                           ;PR9A.c: 285: lcd_goto(password_count);
   779  05A6  087C               	movf	_password_count,w
   780  05A7  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   781                           
   782                           ;PR9A.c: 286: send_char('*');
   783  05AC  302A               	movlw	42
   784  05AD  120A  118A  24C8   	fcall	_send_char
   785                           
   786                           ;PR9A.c: 287: keyin_char[password_count]='9';
   787  05B0  3039               	movlw	57
   788  05B1  00FB               	movwf	??_scanrow4
   789  05B2  087C               	movf	_password_count,w
   790  05B3  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
   791  05B4  0084               	movwf	4
   792  05B5  087B               	movf	??_scanrow4,w
   793  05B6  1383               	bcf	3,7	;select IRP bank0
   794  05B7  0080               	movwf	0
   795                           
   796                           ;PR9A.c: 288: password_count+=1;
   797  05B8  3001               	movlw	1
   798  05B9  00FB               	movwf	??_scanrow4
   799  05BA  087B               	movf	??_scanrow4,w
   800  05BB  07FC               	addwf	_password_count,f
   801                           
   802                           ;PR9A.c: 289: }
   803  05BC  0008               	return
   804  05BD                     l174:	
   805                           
   806                           ;PR9A.c: 290: else if(RA0==0)
   807  05BD  1805               	btfsc	5,0	;volatile
   808  05BE  0008               	return
   809  05BF                     l181:	
   810                           ;PR9A.c: 291: {
   811                           ;PR9A.c: 292: while(RA0==0)continue;
   812                           
   813  05BF  1C05               	btfss	5,0	;volatile
   814  05C0  2DBF               	goto	l181
   815                           
   816                           ;PR9A.c: 293: if(password_count==0)lcd_clr();
   817  05C1  087C               	movf	_password_count,w
   818  05C2  1D03               	btfss	3,2
   819  05C3  2DC9               	goto	l184
   820  05C4  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   821  05C9                     l184:	
   822                           
   823                           ;PR9A.c: 294: lcd_goto(password_count);
   824  05C9  087C               	movf	_password_count,w
   825  05CA  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   826                           
   827                           ;PR9A.c: 295: send_char('*');
   828  05CF  302A               	movlw	42
   829  05D0  120A  118A  24C8   	fcall	_send_char
   830                           
   831                           ;PR9A.c: 296: keyin_char[password_count]='8';
   832  05D3  3038               	movlw	56
   833  05D4  00FB               	movwf	??_scanrow4
   834  05D5  087C               	movf	_password_count,w
   835  05D6  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
   836  05D7  0084               	movwf	4
   837  05D8  087B               	movf	??_scanrow4,w
   838  05D9  1383               	bcf	3,7	;select IRP bank0
   839  05DA  0080               	movwf	0
   840                           
   841                           ;PR9A.c: 297: password_count+=1;
   842  05DB  3001               	movlw	1
   843  05DC  00FB               	movwf	??_scanrow4
   844  05DD  087B               	movf	??_scanrow4,w
   845  05DE  07FC               	addwf	_password_count,f
   846  05DF  0008               	return
   847  05E0                     __end_of_scanrow4:	
   848                           
   849                           	psect	text3
   850  066E                     __ptext3:	
   851 ;; *************** function _scanrow3 *****************
   852 ;; Defined at:
   853 ;;		line 238 in file "../../Source file/PR9A.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;		None               void
   860 ;; Registers used:
   861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          1       0       0       0       0
   870 ;;      Totals:         1       0       0       0       0
   871 ;;Total ram usage:        1 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    4
   874 ;; This function calls:
   875 ;;		_lcd_clr
   876 ;;		_lcd_goto
   877 ;;		_send_char
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _scanrow3
   885  066E                     _scanrow3:	
   886                           
   887                           ;PR9A.c: 240: if(RA3==0)
   888                           
   889                           ;incstack = 0
   890                           ; Regs used in _scanrow3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   891  066E  1283               	bcf	3,5	;RP0=0, select bank0
   892  066F  1303               	bcf	3,6	;RP1=0, select bank0
   893  0670  1985               	btfsc	5,3	;volatile
   894  0671  2E93               	goto	l148
   895  0672                     l149:	
   896                           ;PR9A.c: 241: {
   897                           ;PR9A.c: 242: while(RA3==0)continue;
   898                           
   899  0672  1D85               	btfss	5,3	;volatile
   900  0673  2E72               	goto	l149
   901                           
   902                           ;PR9A.c: 243: if(password_count==0)lcd_clr();
   903  0674  087C               	movf	_password_count,w
   904  0675  1D03               	btfss	3,2
   905  0676  2E7C               	goto	l152
   906  0677  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   907  067C                     l152:	
   908                           
   909                           ;PR9A.c: 244: lcd_goto(password_count);
   910  067C  087C               	movf	_password_count,w
   911  067D  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   912                           
   913                           ;PR9A.c: 245: send_char('*');
   914  0682  302A               	movlw	42
   915  0683  120A  118A  24C8   	fcall	_send_char
   916                           
   917                           ;PR9A.c: 246: keyin_char[password_count]='7';
   918  0686  3037               	movlw	55
   919  0687  00FB               	movwf	??_scanrow3
   920  0688  087C               	movf	_password_count,w
   921  0689  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
   922  068A  0084               	movwf	4
   923  068B  087B               	movf	??_scanrow3,w
   924  068C  1383               	bcf	3,7	;select IRP bank0
   925  068D  0080               	movwf	0
   926                           
   927                           ;PR9A.c: 247: password_count+=1;
   928  068E  3001               	movlw	1
   929  068F  00FB               	movwf	??_scanrow3
   930  0690  087B               	movf	??_scanrow3,w
   931  0691  07FC               	addwf	_password_count,f
   932                           
   933                           ;PR9A.c: 248: }
   934  0692  0008               	return
   935  0693                     l148:	
   936                           
   937                           ;PR9A.c: 249: else if(RA2==0)
   938  0693  1905               	btfsc	5,2	;volatile
   939  0694  2EB6               	goto	l154
   940  0695                     l155:	
   941                           ;PR9A.c: 250: {
   942                           ;PR9A.c: 251: while(RA2==0)continue;
   943                           
   944  0695  1D05               	btfss	5,2	;volatile
   945  0696  2E95               	goto	l155
   946                           
   947                           ;PR9A.c: 252: if(password_count==0)lcd_clr();
   948  0697  087C               	movf	_password_count,w
   949  0698  1D03               	btfss	3,2
   950  0699  2E9F               	goto	l158
   951  069A  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   952  069F                     l158:	
   953                           
   954                           ;PR9A.c: 253: lcd_goto(password_count);
   955  069F  087C               	movf	_password_count,w
   956  06A0  120A  118A  249B  120A  118A  	fcall	_lcd_goto
   957                           
   958                           ;PR9A.c: 254: send_char('*');
   959  06A5  302A               	movlw	42
   960  06A6  120A  118A  24C8   	fcall	_send_char
   961                           
   962                           ;PR9A.c: 255: keyin_char[password_count]='6';
   963  06A9  3036               	movlw	54
   964  06AA  00FB               	movwf	??_scanrow3
   965  06AB  087C               	movf	_password_count,w
   966  06AC  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
   967  06AD  0084               	movwf	4
   968  06AE  087B               	movf	??_scanrow3,w
   969  06AF  1383               	bcf	3,7	;select IRP bank0
   970  06B0  0080               	movwf	0
   971                           
   972                           ;PR9A.c: 256: password_count+=1;
   973  06B1  3001               	movlw	1
   974  06B2  00FB               	movwf	??_scanrow3
   975  06B3  087B               	movf	??_scanrow3,w
   976  06B4  07FC               	addwf	_password_count,f
   977                           
   978                           ;PR9A.c: 257: }
   979  06B5  0008               	return
   980  06B6                     l154:	
   981                           
   982                           ;PR9A.c: 258: else if(RA1==0)
   983  06B6  1885               	btfsc	5,1	;volatile
   984  06B7  2ED9               	goto	l160
   985  06B8                     l161:	
   986                           ;PR9A.c: 259: {
   987                           ;PR9A.c: 260: while(RA1==0)continue;
   988                           
   989  06B8  1C85               	btfss	5,1	;volatile
   990  06B9  2EB8               	goto	l161
   991                           
   992                           ;PR9A.c: 261: if(password_count==0)lcd_clr();
   993  06BA  087C               	movf	_password_count,w
   994  06BB  1D03               	btfss	3,2
   995  06BC  2EC2               	goto	l164
   996  06BD  120A  118A  2489  120A  118A  	fcall	_lcd_clr
   997  06C2                     l164:	
   998                           
   999                           ;PR9A.c: 262: lcd_goto(password_count);
  1000  06C2  087C               	movf	_password_count,w
  1001  06C3  120A  118A  249B  120A  118A  	fcall	_lcd_goto
  1002                           
  1003                           ;PR9A.c: 263: send_char('*');
  1004  06C8  302A               	movlw	42
  1005  06C9  120A  118A  24C8   	fcall	_send_char
  1006                           
  1007                           ;PR9A.c: 264: keyin_char[password_count]='5';
  1008  06CC  3035               	movlw	53
  1009  06CD  00FB               	movwf	??_scanrow3
  1010  06CE  087C               	movf	_password_count,w
  1011  06CF  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
  1012  06D0  0084               	movwf	4
  1013  06D1  087B               	movf	??_scanrow3,w
  1014  06D2  1383               	bcf	3,7	;select IRP bank0
  1015  06D3  0080               	movwf	0
  1016                           
  1017                           ;PR9A.c: 265: password_count+=1;
  1018  06D4  3001               	movlw	1
  1019  06D5  00FB               	movwf	??_scanrow3
  1020  06D6  087B               	movf	??_scanrow3,w
  1021  06D7  07FC               	addwf	_password_count,f
  1022                           
  1023                           ;PR9A.c: 266: }
  1024  06D8  0008               	return
  1025  06D9                     l160:	
  1026                           
  1027                           ;PR9A.c: 267: else if(RA0==0)
  1028  06D9  1805               	btfsc	5,0	;volatile
  1029  06DA  0008               	return
  1030  06DB                     l167:	
  1031                           ;PR9A.c: 268: {
  1032                           ;PR9A.c: 269: while(RA0==0)continue;
  1033                           
  1034  06DB  1C05               	btfss	5,0	;volatile
  1035  06DC  2EDB               	goto	l167
  1036                           
  1037                           ;PR9A.c: 270: if(password_count==0)lcd_clr();
  1038  06DD  087C               	movf	_password_count,w
  1039  06DE  1D03               	btfss	3,2
  1040  06DF  2EE5               	goto	l170
  1041  06E0  120A  118A  2489  120A  118A  	fcall	_lcd_clr
  1042  06E5                     l170:	
  1043                           
  1044                           ;PR9A.c: 271: lcd_goto(password_count);
  1045  06E5  087C               	movf	_password_count,w
  1046  06E6  120A  118A  249B  120A  118A  	fcall	_lcd_goto
  1047                           
  1048                           ;PR9A.c: 272: send_char('*');
  1049  06EB  302A               	movlw	42
  1050  06EC  120A  118A  24C8   	fcall	_send_char
  1051                           
  1052                           ;PR9A.c: 273: keyin_char[password_count]='4';
  1053  06EF  3034               	movlw	52
  1054  06F0  00FB               	movwf	??_scanrow3
  1055  06F1  087C               	movf	_password_count,w
  1056  06F2  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
  1057  06F3  0084               	movwf	4
  1058  06F4  087B               	movf	??_scanrow3,w
  1059  06F5  1383               	bcf	3,7	;select IRP bank0
  1060  06F6  0080               	movwf	0
  1061                           
  1062                           ;PR9A.c: 274: password_count+=1;
  1063  06F7  3001               	movlw	1
  1064  06F8  00FB               	movwf	??_scanrow3
  1065  06F9  087B               	movf	??_scanrow3,w
  1066  06FA  07FC               	addwf	_password_count,f
  1067  06FB  0008               	return
  1068  06FC                     __end_of_scanrow3:	
  1069                           
  1070                           	psect	text4
  1071  05E0                     __ptext4:	
  1072 ;; *************** function _scanrow2 *****************
  1073 ;; Defined at:
  1074 ;;		line 198 in file "../../Source file/PR9A.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;		None               void
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0
  1090 ;;      Temps:          1       0       0       0       0
  1091 ;;      Totals:         1       0       0       0       0
  1092 ;;Total ram usage:        1 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    4
  1095 ;; This function calls:
  1096 ;;		_lcd_clr
  1097 ;;		_lcd_goto
  1098 ;;		_send_char
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _scanrow2
  1106  05E0                     _scanrow2:	
  1107                           
  1108                           ;PR9A.c: 200: if(RA3==0)
  1109                           
  1110                           ;incstack = 0
  1111                           ; Regs used in _scanrow2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1112  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1113  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1114  05E2  1985               	btfsc	5,3	;volatile
  1115  05E3  2E05               	goto	l122
  1116  05E4                     l123:	
  1117                           ;PR9A.c: 201: {
  1118                           ;PR9A.c: 202: while(RA3==0)continue;
  1119                           
  1120  05E4  1D85               	btfss	5,3	;volatile
  1121  05E5  2DE4               	goto	l123
  1122                           
  1123                           ;PR9A.c: 203: if(password_count==0)lcd_clr();
  1124  05E6  087C               	movf	_password_count,w
  1125  05E7  1D03               	btfss	3,2
  1126  05E8  2DEE               	goto	l126
  1127  05E9  120A  118A  2489  120A  118A  	fcall	_lcd_clr
  1128  05EE                     l126:	
  1129                           
  1130                           ;PR9A.c: 204: lcd_goto(password_count);
  1131  05EE  087C               	movf	_password_count,w
  1132  05EF  120A  118A  249B  120A  118A  	fcall	_lcd_goto
  1133                           
  1134                           ;PR9A.c: 205: send_char('*');
  1135  05F4  302A               	movlw	42
  1136  05F5  120A  118A  24C8   	fcall	_send_char
  1137                           
  1138                           ;PR9A.c: 206: keyin_char[password_count]='3';
  1139  05F8  3033               	movlw	51
  1140  05F9  00FB               	movwf	??_scanrow2
  1141  05FA  087C               	movf	_password_count,w
  1142  05FB  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
  1143  05FC  0084               	movwf	4
  1144  05FD  087B               	movf	??_scanrow2,w
  1145  05FE  1383               	bcf	3,7	;select IRP bank0
  1146  05FF  0080               	movwf	0
  1147                           
  1148                           ;PR9A.c: 207: password_count+=1;
  1149  0600  3001               	movlw	1
  1150  0601  00FB               	movwf	??_scanrow2
  1151  0602  087B               	movf	??_scanrow2,w
  1152  0603  07FC               	addwf	_password_count,f
  1153                           
  1154                           ;PR9A.c: 208: }
  1155  0604  0008               	return
  1156  0605                     l122:	
  1157                           
  1158                           ;PR9A.c: 209: else if(RA2==0)
  1159  0605  1905               	btfsc	5,2	;volatile
  1160  0606  2E28               	goto	l128
  1161  0607                     l129:	
  1162                           ;PR9A.c: 210: {
  1163                           ;PR9A.c: 211: while(RA2==0)continue;
  1164                           
  1165  0607  1D05               	btfss	5,2	;volatile
  1166  0608  2E07               	goto	l129
  1167                           
  1168                           ;PR9A.c: 212: if(password_count==0)lcd_clr();
  1169  0609  087C               	movf	_password_count,w
  1170  060A  1D03               	btfss	3,2
  1171  060B  2E11               	goto	l132
  1172  060C  120A  118A  2489  120A  118A  	fcall	_lcd_clr
  1173  0611                     l132:	
  1174                           
  1175                           ;PR9A.c: 213: lcd_goto(password_count);
  1176  0611  087C               	movf	_password_count,w
  1177  0612  120A  118A  249B  120A  118A  	fcall	_lcd_goto
  1178                           
  1179                           ;PR9A.c: 214: send_char('*');
  1180  0617  302A               	movlw	42
  1181  0618  120A  118A  24C8   	fcall	_send_char
  1182                           
  1183                           ;PR9A.c: 215: keyin_char[password_count]='2';
  1184  061B  3032               	movlw	50
  1185  061C  00FB               	movwf	??_scanrow2
  1186  061D  087C               	movf	_password_count,w
  1187  061E  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
  1188  061F  0084               	movwf	4
  1189  0620  087B               	movf	??_scanrow2,w
  1190  0621  1383               	bcf	3,7	;select IRP bank0
  1191  0622  0080               	movwf	0
  1192                           
  1193                           ;PR9A.c: 216: password_count+=1;
  1194  0623  3001               	movlw	1
  1195  0624  00FB               	movwf	??_scanrow2
  1196  0625  087B               	movf	??_scanrow2,w
  1197  0626  07FC               	addwf	_password_count,f
  1198                           
  1199                           ;PR9A.c: 217: }
  1200  0627  0008               	return
  1201  0628                     l128:	
  1202                           
  1203                           ;PR9A.c: 218: else if(RA1==0)
  1204  0628  1885               	btfsc	5,1	;volatile
  1205  0629  2E4B               	goto	l134
  1206  062A                     l135:	
  1207                           ;PR9A.c: 219: {
  1208                           ;PR9A.c: 220: while(RA1==0)continue;
  1209                           
  1210  062A  1C85               	btfss	5,1	;volatile
  1211  062B  2E2A               	goto	l135
  1212                           
  1213                           ;PR9A.c: 221: if(password_count==0)lcd_clr();
  1214  062C  087C               	movf	_password_count,w
  1215  062D  1D03               	btfss	3,2
  1216  062E  2E34               	goto	l138
  1217  062F  120A  118A  2489  120A  118A  	fcall	_lcd_clr
  1218  0634                     l138:	
  1219                           
  1220                           ;PR9A.c: 222: lcd_goto(password_count);
  1221  0634  087C               	movf	_password_count,w
  1222  0635  120A  118A  249B  120A  118A  	fcall	_lcd_goto
  1223                           
  1224                           ;PR9A.c: 223: send_char('*');
  1225  063A  302A               	movlw	42
  1226  063B  120A  118A  24C8   	fcall	_send_char
  1227                           
  1228                           ;PR9A.c: 224: keyin_char[password_count]='1';
  1229  063E  3031               	movlw	49
  1230  063F  00FB               	movwf	??_scanrow2
  1231  0640  087C               	movf	_password_count,w
  1232  0641  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
  1233  0642  0084               	movwf	4
  1234  0643  087B               	movf	??_scanrow2,w
  1235  0644  1383               	bcf	3,7	;select IRP bank0
  1236  0645  0080               	movwf	0
  1237                           
  1238                           ;PR9A.c: 225: password_count+=1;
  1239  0646  3001               	movlw	1
  1240  0647  00FB               	movwf	??_scanrow2
  1241  0648  087B               	movf	??_scanrow2,w
  1242  0649  07FC               	addwf	_password_count,f
  1243                           
  1244                           ;PR9A.c: 226: }
  1245  064A  0008               	return
  1246  064B                     l134:	
  1247                           
  1248                           ;PR9A.c: 227: else if(RA0==0)
  1249  064B  1805               	btfsc	5,0	;volatile
  1250  064C  0008               	return
  1251  064D                     l141:	
  1252                           ;PR9A.c: 228: {
  1253                           ;PR9A.c: 229: while(RA0==0)continue;
  1254                           
  1255  064D  1C05               	btfss	5,0	;volatile
  1256  064E  2E4D               	goto	l141
  1257                           
  1258                           ;PR9A.c: 230: if(password_count==0)lcd_clr();
  1259  064F  087C               	movf	_password_count,w
  1260  0650  1D03               	btfss	3,2
  1261  0651  2E57               	goto	l144
  1262  0652  120A  118A  2489  120A  118A  	fcall	_lcd_clr
  1263  0657                     l144:	
  1264                           
  1265                           ;PR9A.c: 231: lcd_goto(password_count);
  1266  0657  087C               	movf	_password_count,w
  1267  0658  120A  118A  249B  120A  118A  	fcall	_lcd_goto
  1268                           
  1269                           ;PR9A.c: 232: send_char('*');
  1270  065D  302A               	movlw	42
  1271  065E  120A  118A  24C8   	fcall	_send_char
  1272                           
  1273                           ;PR9A.c: 233: keyin_char[password_count]='0';
  1274  0661  3030               	movlw	48
  1275  0662  00FB               	movwf	??_scanrow2
  1276  0663  087C               	movf	_password_count,w
  1277  0664  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
  1278  0665  0084               	movwf	4
  1279  0666  087B               	movf	??_scanrow2,w
  1280  0667  1383               	bcf	3,7	;select IRP bank0
  1281  0668  0080               	movwf	0
  1282                           
  1283                           ;PR9A.c: 234: password_count+=1;
  1284  0669  3001               	movlw	1
  1285  066A  00FB               	movwf	??_scanrow2
  1286  066B  087B               	movf	??_scanrow2,w
  1287  066C  07FC               	addwf	_password_count,f
  1288  066D  0008               	return
  1289  066E                     __end_of_scanrow2:	
  1290                           
  1291                           	psect	text5
  1292  0541                     __ptext5:	
  1293 ;; *************** function _scanrow1 *****************
  1294 ;; Defined at:
  1295 ;;		line 184 in file "../../Source file/PR9A.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1309 ;;      Params:         0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0
  1311 ;;      Temps:          1       0       0       0       0
  1312 ;;      Totals:         1       0       0       0       0
  1313 ;;Total ram usage:        1 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    4
  1316 ;; This function calls:
  1317 ;;		_lcd_clr
  1318 ;;		_lcd_goto
  1319 ;;		_send_char
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _scanrow1
  1327  0541                     _scanrow1:	
  1328                           
  1329                           ;PR9A.c: 186: if(RA3==0)
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _scanrow1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1333  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0543  1985               	btfsc	5,3	;volatile
  1336  0544  0008               	return
  1337  0545                     l115:	
  1338                           ;PR9A.c: 187: {
  1339                           ;PR9A.c: 188: while(RA3==0)continue;
  1340                           
  1341  0545  1D85               	btfss	5,3	;volatile
  1342  0546  2D45               	goto	l115
  1343                           
  1344                           ;PR9A.c: 189: if(password_count==0)lcd_clr();
  1345  0547  087C               	movf	_password_count,w
  1346  0548  1D03               	btfss	3,2
  1347  0549  2D4F               	goto	l118
  1348  054A  120A  118A  2489  120A  118A  	fcall	_lcd_clr
  1349  054F                     l118:	
  1350                           
  1351                           ;PR9A.c: 190: lcd_goto(password_count);
  1352  054F  087C               	movf	_password_count,w
  1353  0550  120A  118A  249B  120A  118A  	fcall	_lcd_goto
  1354                           
  1355                           ;PR9A.c: 191: send_char('*');
  1356  0555  302A               	movlw	42
  1357  0556  120A  118A  24C8   	fcall	_send_char
  1358                           
  1359                           ;PR9A.c: 192: keyin_char[password_count]='#';
  1360  0559  3023               	movlw	35
  1361  055A  00FB               	movwf	??_scanrow1
  1362  055B  087C               	movf	_password_count,w
  1363  055C  3E20               	addlw	(low (_keyin_char| 0))& (0+255)
  1364  055D  0084               	movwf	4
  1365  055E  087B               	movf	??_scanrow1,w
  1366  055F  1383               	bcf	3,7	;select IRP bank0
  1367  0560  0080               	movwf	0
  1368                           
  1369                           ;PR9A.c: 193: password_count+=1;
  1370  0561  3001               	movlw	1
  1371  0562  00FB               	movwf	??_scanrow1
  1372  0563  087B               	movf	??_scanrow1,w
  1373  0564  07FC               	addwf	_password_count,f
  1374  0565  0008               	return
  1375  0566                     __end_of_scanrow1:	
  1376                           
  1377                           	psect	text6
  1378  04C8                     __ptext6:	
  1379 ;; *************** function _send_char *****************
  1380 ;; Defined at:
  1381 ;;		line 339 in file "../../Source file/PR9A.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  data            1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  data            1    8[COMMON] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;		None               void
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         1       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0
  1398 ;;      Totals:         1       0       0       0       0
  1399 ;;Total ram usage:        1 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    2
  1402 ;; This function calls:
  1403 ;;		_delay
  1404 ;;		_e_pulse
  1405 ;; This function is called by:
  1406 ;;		_scanrow1
  1407 ;;		_scanrow2
  1408 ;;		_scanrow3
  1409 ;;		_scanrow4
  1410 ;;		_send_string
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _send_char
  1416  04C8                     _send_char:	
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  1420                           ;send_char@data stored from wreg
  1421  04C8  00F8               	movwf	send_char@data
  1422                           
  1423                           ;PR9A.c: 341: RC0=1;
  1424  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1425  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1426  04CB  1407               	bsf	7,0	;volatile
  1427                           
  1428                           ;PR9A.c: 342: PORTD=data;
  1429  04CC  0878               	movf	send_char@data,w
  1430  04CD  0088               	movwf	8	;volatile
  1431                           
  1432                           ;PR9A.c: 343: delay(50);
  1433  04CE  3000               	movlw	0
  1434  04CF  00F3               	movwf	delay@data+3
  1435  04D0  3000               	movlw	0
  1436  04D1  00F2               	movwf	delay@data+2
  1437  04D2  3000               	movlw	0
  1438  04D3  00F1               	movwf	delay@data+1
  1439  04D4  3032               	movlw	50
  1440  04D5  00F0               	movwf	delay@data
  1441  04D6  120A  118A  251E  120A  118A  	fcall	_delay
  1442                           
  1443                           ;PR9A.c: 344: e_pulse();
  1444  04DB  120A  118A  24DF   	fcall	_e_pulse
  1445  04DE  0008               	return
  1446  04DF                     __end_of_send_char:	
  1447                           
  1448                           	psect	text7
  1449  049B                     __ptext7:	
  1450 ;; *************** function _lcd_goto *****************
  1451 ;; Defined at:
  1452 ;;		line 355 in file "../../Source file/PR9A.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  data            1    wreg     unsigned char 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  data            1   10[COMMON] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;		None               void
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       0       0       0
  1467 ;;      Locals:         1       0       0       0       0
  1468 ;;      Temps:          1       0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    3
  1473 ;; This function calls:
  1474 ;;		_send_config
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;;		_scanrow1
  1478 ;;		_scanrow2
  1479 ;;		_scanrow3
  1480 ;;		_scanrow4
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _lcd_goto
  1486  049B                     _lcd_goto:	
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1490                           ;lcd_goto@data stored from wreg
  1491  049B  00FA               	movwf	lcd_goto@data
  1492                           
  1493                           ;PR9A.c: 357: if(data<16)
  1494  049C  3010               	movlw	16
  1495  049D  027A               	subwf	lcd_goto@data,w
  1496  049E  1803               	skipnc
  1497  049F  2CA6               	goto	l989
  1498                           
  1499                           ;PR9A.c: 358: {
  1500                           ;PR9A.c: 359: send_config(0x80+data);
  1501  04A0  087A               	movf	lcd_goto@data,w
  1502  04A1  3E80               	addlw	128
  1503  04A2  120A  118A  24B1   	fcall	_send_config
  1504                           
  1505                           ;PR9A.c: 360: }
  1506  04A5  0008               	return
  1507  04A6                     l989:	
  1508                           
  1509                           ;PR9A.c: 361: else
  1510                           ;PR9A.c: 362: {
  1511                           ;PR9A.c: 363: data=data-20;
  1512  04A6  087A               	movf	lcd_goto@data,w
  1513  04A7  3EEC               	addlw	236
  1514  04A8  00F9               	movwf	??_lcd_goto
  1515  04A9  0879               	movf	??_lcd_goto,w
  1516  04AA  00FA               	movwf	lcd_goto@data
  1517                           
  1518                           ;PR9A.c: 364: send_config(0xc0+data);
  1519  04AB  087A               	movf	lcd_goto@data,w
  1520  04AC  3EC0               	addlw	192
  1521  04AD  120A  118A  24B1   	fcall	_send_config
  1522  04B0  0008               	return
  1523  04B1                     __end_of_lcd_goto:	
  1524                           
  1525                           	psect	text8
  1526  0489                     __ptext8:	
  1527 ;; *************** function _lcd_clr *****************
  1528 ;; Defined at:
  1529 ;;		line 368 in file "../../Source file/PR9A.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;		None               void
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		_delay
  1552 ;;		_send_config
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;;		_scanrow1
  1556 ;;		_scanrow2
  1557 ;;		_scanrow3
  1558 ;;		_scanrow4
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _lcd_clr
  1564  0489                     _lcd_clr:	
  1565                           
  1566                           ;PR9A.c: 370: send_config(0x01);
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  1570  0489  3001               	movlw	1
  1571  048A  120A  118A  24B1  120A  118A  	fcall	_send_config
  1572                           
  1573                           ;PR9A.c: 371: delay(50);
  1574  048F  3000               	movlw	0
  1575  0490  00F3               	movwf	delay@data+3
  1576  0491  3000               	movlw	0
  1577  0492  00F2               	movwf	delay@data+2
  1578  0493  3000               	movlw	0
  1579  0494  00F1               	movwf	delay@data+1
  1580  0495  3032               	movlw	50
  1581  0496  00F0               	movwf	delay@data
  1582  0497  120A  118A  251E   	fcall	_delay
  1583  049A  0008               	return
  1584  049B                     __end_of_lcd_clr:	
  1585                           
  1586                           	psect	text9
  1587  04B1                     __ptext9:	
  1588 ;; *************** function _send_config *****************
  1589 ;; Defined at:
  1590 ;;		line 331 in file "../../Source file/PR9A.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  data            1    wreg     unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  data            1    8[COMMON] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;		None               void
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         1       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0
  1607 ;;      Totals:         1       0       0       0       0
  1608 ;;Total ram usage:        1 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    2
  1611 ;; This function calls:
  1612 ;;		_delay
  1613 ;;		_e_pulse
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;;		_lcd_goto
  1617 ;;		_lcd_clr
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           
  1622                           ;psect for function _send_config
  1623  04B1                     _send_config:	
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  1627                           ;send_config@data stored from wreg
  1628  04B1  00F8               	movwf	send_config@data
  1629                           
  1630                           ;PR9A.c: 333: RC0=0;
  1631  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1632  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1633  04B4  1007               	bcf	7,0	;volatile
  1634                           
  1635                           ;PR9A.c: 334: PORTD=data;
  1636  04B5  0878               	movf	send_config@data,w
  1637  04B6  0088               	movwf	8	;volatile
  1638                           
  1639                           ;PR9A.c: 335: delay(50);
  1640  04B7  3000               	movlw	0
  1641  04B8  00F3               	movwf	delay@data+3
  1642  04B9  3000               	movlw	0
  1643  04BA  00F2               	movwf	delay@data+2
  1644  04BB  3000               	movlw	0
  1645  04BC  00F1               	movwf	delay@data+1
  1646  04BD  3032               	movlw	50
  1647  04BE  00F0               	movwf	delay@data
  1648  04BF  120A  118A  251E  120A  118A  	fcall	_delay
  1649                           
  1650                           ;PR9A.c: 336: e_pulse();
  1651  04C4  120A  118A  24DF   	fcall	_e_pulse
  1652  04C7  0008               	return
  1653  04C8                     __end_of_send_config:	
  1654                           
  1655                           	psect	text10
  1656  04DF                     __ptext10:	
  1657 ;; *************** function _e_pulse *****************
  1658 ;; Defined at:
  1659 ;;		line 347 in file "../../Source file/PR9A.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;		None               void
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    1
  1680 ;; This function calls:
  1681 ;;		_delay
  1682 ;; This function is called by:
  1683 ;;		_send_config
  1684 ;;		_send_char
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _e_pulse
  1690  04DF                     _e_pulse:	
  1691                           
  1692                           ;PR9A.c: 349: RC1=1;
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  1696  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1697  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1698  04E1  1487               	bsf	7,1	;volatile
  1699                           
  1700                           ;PR9A.c: 350: delay(50);
  1701  04E2  3000               	movlw	0
  1702  04E3  00F3               	movwf	delay@data+3
  1703  04E4  3000               	movlw	0
  1704  04E5  00F2               	movwf	delay@data+2
  1705  04E6  3000               	movlw	0
  1706  04E7  00F1               	movwf	delay@data+1
  1707  04E8  3032               	movlw	50
  1708  04E9  00F0               	movwf	delay@data
  1709  04EA  120A  118A  251E  120A  118A  	fcall	_delay
  1710                           
  1711                           ;PR9A.c: 351: RC1=0;
  1712  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1713  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1714  04F1  1087               	bcf	7,1	;volatile
  1715                           
  1716                           ;PR9A.c: 352: delay(50);
  1717  04F2  3000               	movlw	0
  1718  04F3  00F3               	movwf	delay@data+3
  1719  04F4  3000               	movlw	0
  1720  04F5  00F2               	movwf	delay@data+2
  1721  04F6  3000               	movlw	0
  1722  04F7  00F1               	movwf	delay@data+1
  1723  04F8  3032               	movlw	50
  1724  04F9  00F0               	movwf	delay@data
  1725  04FA  120A  118A  251E   	fcall	_delay
  1726  04FD  0008               	return
  1727  04FE                     __end_of_e_pulse:	
  1728                           
  1729                           	psect	text11
  1730  0470                     __ptext11:	
  1731 ;; *************** function _clearcolumn4 *****************
  1732 ;; Defined at:
  1733 ;;		line 176 in file "../../Source file/PR9A.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		None
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0
  1750 ;;      Totals:         0       0       0       0       0
  1751 ;;Total ram usage:        0 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _clearcolumn4
  1762  0470                     _clearcolumn4:	
  1763                           
  1764                           ;PR9A.c: 178: RE1=1;
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in _clearcolumn4: []
  1768  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0472  1489               	bsf	9,1	;volatile
  1771                           
  1772                           ;PR9A.c: 179: RE0=1;
  1773  0473  1409               	bsf	9,0	;volatile
  1774                           
  1775                           ;PR9A.c: 180: RA5=1;
  1776  0474  1685               	bsf	5,5	;volatile
  1777                           
  1778                           ;PR9A.c: 181: RA4=0;
  1779  0475  1205               	bcf	5,4	;volatile
  1780  0476  0008               	return
  1781  0477                     __end_of_clearcolumn4:	
  1782                           
  1783                           	psect	text12
  1784  0469                     __ptext12:	
  1785 ;; *************** function _clearcolumn3 *****************
  1786 ;; Defined at:
  1787 ;;		line 168 in file "../../Source file/PR9A.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		None
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _clearcolumn3
  1816  0469                     _clearcolumn3:	
  1817                           
  1818                           ;PR9A.c: 170: RE1=1;
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _clearcolumn3: []
  1822  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1823  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1824  046B  1489               	bsf	9,1	;volatile
  1825                           
  1826                           ;PR9A.c: 171: RE0=1;
  1827  046C  1409               	bsf	9,0	;volatile
  1828                           
  1829                           ;PR9A.c: 172: RA5=0;
  1830  046D  1285               	bcf	5,5	;volatile
  1831                           
  1832                           ;PR9A.c: 173: RA4=1;
  1833  046E  1605               	bsf	5,4	;volatile
  1834  046F  0008               	return
  1835  0470                     __end_of_clearcolumn3:	
  1836                           
  1837                           	psect	text13
  1838  0462                     __ptext13:	
  1839 ;; *************** function _clearcolumn2 *****************
  1840 ;; Defined at:
  1841 ;;		line 160 in file "../../Source file/PR9A.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;		None               void
  1848 ;; Registers used:
  1849 ;;		None
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _clearcolumn2
  1870  0462                     _clearcolumn2:	
  1871                           
  1872                           ;PR9A.c: 162: RE1=1;
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _clearcolumn2: []
  1876  0462  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0463  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0464  1489               	bsf	9,1	;volatile
  1879                           
  1880                           ;PR9A.c: 163: RE0=0;
  1881  0465  1009               	bcf	9,0	;volatile
  1882                           
  1883                           ;PR9A.c: 164: RA5=1;
  1884  0466  1685               	bsf	5,5	;volatile
  1885                           
  1886                           ;PR9A.c: 165: RA4=1;
  1887  0467  1605               	bsf	5,4	;volatile
  1888  0468  0008               	return
  1889  0469                     __end_of_clearcolumn2:	
  1890                           
  1891                           	psect	text14
  1892  045B                     __ptext14:	
  1893 ;; *************** function _clearcolumn1 *****************
  1894 ;; Defined at:
  1895 ;;		line 152 in file "../../Source file/PR9A.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;		None               void
  1902 ;; Registers used:
  1903 ;;		None
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0
  1912 ;;      Totals:         0       0       0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function _clearcolumn1
  1924  045B                     _clearcolumn1:	
  1925                           
  1926                           ;PR9A.c: 154: RE1=0;
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _clearcolumn1: []
  1930  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1931  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1932  045D  1089               	bcf	9,1	;volatile
  1933                           
  1934                           ;PR9A.c: 155: RE0=1;
  1935  045E  1409               	bsf	9,0	;volatile
  1936                           
  1937                           ;PR9A.c: 156: RA5=1;
  1938  045F  1685               	bsf	5,5	;volatile
  1939                           
  1940                           ;PR9A.c: 157: RA4=1;
  1941  0460  1605               	bsf	5,4	;volatile
  1942  0461  0008               	return
  1943  0462                     __end_of_clearcolumn1:	
  1944                           
  1945                           	psect	text15
  1946  0566                     __ptext15:	
  1947 ;; *************** function _beep_twice *****************
  1948 ;; Defined at:
  1949 ;;		line 317 in file "../../Source file/PR9A.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;		None               void
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1963 ;;      Params:         0       0       0       0       0
  1964 ;;      Locals:         0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0
  1966 ;;      Totals:         0       0       0       0       0
  1967 ;;Total ram usage:        0 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    1
  1970 ;; This function calls:
  1971 ;;		_delay
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _beep_twice
  1979  0566                     _beep_twice:	
  1980                           
  1981                           ;PR9A.c: 319: RB2=1;
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _beep_twice: [wreg+status,2+status,0+pclath+cstack]
  1985  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0567  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0568  1506               	bsf	6,2	;volatile
  1988                           
  1989                           ;PR9A.c: 320: delay(8000);
  1990  0569  3000               	movlw	0
  1991  056A  00F3               	movwf	delay@data+3
  1992  056B  3000               	movlw	0
  1993  056C  00F2               	movwf	delay@data+2
  1994  056D  301F               	movlw	31
  1995  056E  00F1               	movwf	delay@data+1
  1996  056F  3040               	movlw	64
  1997  0570  00F0               	movwf	delay@data
  1998  0571  120A  118A  251E  120A  118A  	fcall	_delay
  1999                           
  2000                           ;PR9A.c: 321: RB2=0;
  2001  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0578  1106               	bcf	6,2	;volatile
  2004                           
  2005                           ;PR9A.c: 322: delay(13000);
  2006  0579  3000               	movlw	0
  2007  057A  00F3               	movwf	delay@data+3
  2008  057B  3000               	movlw	0
  2009  057C  00F2               	movwf	delay@data+2
  2010  057D  3032               	movlw	50
  2011  057E  00F1               	movwf	delay@data+1
  2012  057F  30C8               	movlw	200
  2013  0580  00F0               	movwf	delay@data
  2014  0581  120A  118A  251E  120A  118A  	fcall	_delay
  2015                           
  2016                           ;PR9A.c: 323: RB2=1;
  2017  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0588  1506               	bsf	6,2	;volatile
  2020                           
  2021                           ;PR9A.c: 324: delay(8000);
  2022  0589  3000               	movlw	0
  2023  058A  00F3               	movwf	delay@data+3
  2024  058B  3000               	movlw	0
  2025  058C  00F2               	movwf	delay@data+2
  2026  058D  301F               	movlw	31
  2027  058E  00F1               	movwf	delay@data+1
  2028  058F  3040               	movlw	64
  2029  0590  00F0               	movwf	delay@data
  2030  0591  120A  118A  251E   	fcall	_delay
  2031                           
  2032                           ;PR9A.c: 325: RB2=0;
  2033  0594  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0595  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0596  1106               	bcf	6,2	;volatile
  2036  0597  0008               	return
  2037  0598                     __end_of_beep_twice:	
  2038                           
  2039                           	psect	text16
  2040  0477                     __ptext16:	
  2041 ;; *************** function _beep_once *****************
  2042 ;; Defined at:
  2043 ;;		line 310 in file "../../Source file/PR9A.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;		None               void
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    1
  2064 ;; This function calls:
  2065 ;;		_delay
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _beep_once
  2073  0477                     _beep_once:	
  2074                           
  2075                           ;PR9A.c: 312: RB2=1;
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _beep_once: [wreg+status,2+status,0+pclath+cstack]
  2079  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0479  1506               	bsf	6,2	;volatile
  2082                           
  2083                           ;PR9A.c: 313: delay(8000);
  2084  047A  3000               	movlw	0
  2085  047B  00F3               	movwf	delay@data+3
  2086  047C  3000               	movlw	0
  2087  047D  00F2               	movwf	delay@data+2
  2088  047E  301F               	movlw	31
  2089  047F  00F1               	movwf	delay@data+1
  2090  0480  3040               	movlw	64
  2091  0481  00F0               	movwf	delay@data
  2092  0482  120A  118A  251E   	fcall	_delay
  2093                           
  2094                           ;PR9A.c: 314: RB2=0;
  2095  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0487  1106               	bcf	6,2	;volatile
  2098  0488  0008               	return
  2099  0489                     __end_of_beep_once:	
  2100                           
  2101                           	psect	text17
  2102  051E                     __ptext17:	
  2103 ;; *************** function _delay *****************
  2104 ;; Defined at:
  2105 ;;		line 305 in file "../../Source file/PR9A.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  data            4    0[COMMON] unsigned long 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;		None               void
  2112 ;; Registers used:
  2113 ;;		wreg
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         4       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0
  2121 ;;      Temps:          4       0       0       0       0
  2122 ;;      Totals:         8       0       0       0       0
  2123 ;;Total ram usage:        8 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;;		_beep_once
  2130 ;;		_beep_twice
  2131 ;;		_send_config
  2132 ;;		_send_char
  2133 ;;		_e_pulse
  2134 ;;		_lcd_clr
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _delay
  2140  051E                     _delay:	
  2141                           
  2142                           ;PR9A.c: 307: for( ;data>0;data-=1);
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _delay: [wreg]
  2146  051E  0873               	movf	delay@data+3,w
  2147  051F  0472               	iorwf	delay@data+2,w
  2148  0520  0471               	iorwf	delay@data+1,w
  2149  0521  0470               	iorwf	delay@data,w
  2150  0522  1903               	btfsc	3,2
  2151  0523  0008               	return
  2152  0524  3001               	movlw	1
  2153  0525  00F4               	movwf	??_delay
  2154  0526  3000               	movlw	0
  2155  0527  00F5               	movwf	??_delay+1
  2156  0528  3000               	movlw	0
  2157  0529  00F6               	movwf	??_delay+2
  2158  052A  3000               	movlw	0
  2159  052B  00F7               	movwf	??_delay+3
  2160  052C  0874               	movf	??_delay,w
  2161  052D  02F0               	subwf	delay@data,f
  2162  052E  0875               	movf	??_delay+1,w
  2163  052F  1C03               	skipc
  2164  0530  0F75               	incfsz	??_delay+1,w
  2165  0531  2D33               	goto	u485
  2166  0532  2D34               	goto	u486
  2167  0533                     u485:	
  2168  0533  02F1               	subwf	delay@data+1,f
  2169  0534                     u486:	
  2170  0534  0876               	movf	??_delay+2,w
  2171  0535  1C03               	skipc
  2172  0536  0F76               	incfsz	??_delay+2,w
  2173  0537  2D39               	goto	u487
  2174  0538  2D3A               	goto	u488
  2175  0539                     u487:	
  2176  0539  02F2               	subwf	delay@data+2,f
  2177  053A                     u488:	
  2178  053A  0877               	movf	??_delay+3,w
  2179  053B  1C03               	skipc
  2180  053C  0F77               	incfsz	??_delay+3,w
  2181  053D  2D3F               	goto	u489
  2182  053E  2D1E               	goto	_delay
  2183  053F                     u489:	
  2184  053F  02F3               	subwf	delay@data+3,f
  2185  0540  2D1E               	goto	_delay
  2186  0541                     __end_of_delay:	
  2187  007E                     btemp	set	126	;btemp
  2188  007E                     wtemp	set	126
  2189  007E                     wtemp0	set	126
  2190  0080                     wtemp1	set	128
  2191  0082                     wtemp2	set	130
  2192  0084                     wtemp3	set	132
  2193  0086                     wtemp4	set	134
  2194  0088                     wtemp5	set	136
  2195  007F                     wtemp6	set	127
  2196  007E                     ttemp	set	126
  2197  007E                     ttemp0	set	126
  2198  0081                     ttemp1	set	129
  2199  0084                     ttemp2	set	132
  2200  0087                     ttemp3	set	135
  2201  007F                     ttemp4	set	127
  2202  007E                     ltemp	set	126
  2203  007E                     ltemp0	set	126
  2204  0082                     ltemp1	set	130
  2205  0086                     ltemp2	set	134
  2206  0080                     ltemp3	set	128


Data Sizes:
    Strings     46
    Constant    0
    Data        6
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_string@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_scanrow1
    _main->_scanrow2
    _main->_scanrow3
    _main->_scanrow4
    _main->_send_string
    _send_string->_send_char
    _scanrow4->_lcd_goto
    _scanrow3->_lcd_goto
    _scanrow2->_lcd_goto
    _scanrow1->_lcd_goto
    _send_char->_delay
    _lcd_goto->_send_config
    _lcd_clr->_send_config
    _send_config->_delay
    _e_pulse->_delay
    _beep_twice->_delay
    _beep_once->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23973
                          _beep_once
                         _beep_twice
                       _clearcolumn1
                       _clearcolumn2
                       _clearcolumn3
                       _clearcolumn4
                              _delay
                            _lcd_clr
                           _lcd_goto
                           _scanrow1
                           _scanrow2
                           _scanrow3
                           _scanrow4
                        _send_config
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          3     3      0    1348
                                              9 COMMON     3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _scanrow4                                             1     1      0    4180
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _scanrow3                                             1     1      0    4180
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _scanrow2                                             1     1      0    4180
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (1) _scanrow1                                             1     1      0    4180
                                             11 COMMON     1     1      0
                            _lcd_clr
                           _lcd_goto
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0    1172
                                              8 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             2     2      0    1261
                                              9 COMMON     2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (2) _lcd_clr                                              0     0      0    1747
                              _delay
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _send_config                                          1     1      0    1172
                                              8 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (3) _e_pulse                                              0     0      0     575
                              _delay
 ---------------------------------------------------------------------------------
 (1) _clearcolumn4                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearcolumn3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearcolumn2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearcolumn1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _beep_twice                                           0     0      0     575
                              _delay
 ---------------------------------------------------------------------------------
 (1) _beep_once                                            0     0      0     575
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                8     4      4     575
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _beep_once
     _delay
   _beep_twice
     _delay
   _clearcolumn1
   _clearcolumn2
   _clearcolumn3
   _clearcolumn4
   _delay
   _lcd_clr
     _delay
     _send_config
       _delay
       _e_pulse
         _delay
   _lcd_goto
     _send_config
       _delay
       _e_pulse
         _delay
   _scanrow1
     _lcd_clr
       _delay
       _send_config
         _delay
         _e_pulse
           _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _scanrow2
     _lcd_clr
       _delay
       _send_config
         _delay
         _e_pulse
           _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _scanrow3
     _lcd_clr
       _delay
       _send_config
         _delay
         _e_pulse
           _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _scanrow4
     _lcd_clr
       _delay
       _send_config
         _delay
         _e_pulse
           _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_char
       _delay
       _e_pulse
         _delay
   _send_config
     _delay
     _e_pulse
       _delay
   _send_string
     _send_char
       _delay
       _e_pulse
         _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 21 15:17:39 2015

                      pc 0002             _stalled_char 0026              __CFG_CP$OFF 0000  
                     l90 07B8                       l94 07D2                       fsr 0004  
                    l122 0605                      l115 0545                      l123 05E4  
                    l132 0611                      l141 064D                      l118 054F  
                    l134 064B                      l126 05EE                      l135 062A  
                    l144 0657                      l128 0628                      l160 06D9  
                    l152 067C                      l129 0607                      l161 06B8  
                    l138 0634                      l170 06E5                      l154 06B6  
                    l155 0695                      l164 06C2                      l148 0693  
                    l149 0672                      l181 05BF                      l158 069F  
                    l174 05BD                      l167 06DB                      l175 059C  
                    l184 05C9                      l178 05A6                      l989 04A6  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RB1 0031                      _RA3 002B                      _RC0 0038  
                    _RB2 0032                      _RA4 002C                      _RC1 0039  
                    _RA5 002D                      _RC2 003A                      _RC3 003B  
                    _RE0 0048                      _RE1 0049             __CFG_CPD$OFF 0000  
                    u485 0533                      u486 0534                      u487 0539  
                    u488 053A                      u489 053F                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000          send_config@data 0078  
           __CFG_LVP$OFF 0000                     l1007 0500                     l1237 07B9  
                   l1195 0757                     STR_1 001A                     STR_2 0009  
                   STR_3 0027                     STR_4 0030             __CFG_WRT$OFF 0000  
                   _main 06FC                     btemp 007E             lcd_goto@data 007A  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070            __CFG_WDTE$OFF 0000  
         __CFG_DEBUG$OFF 0000                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089            __CFG_PWRTE$ON 0000  
        __end_of_e_pulse 04FE          __end_of_lcd_clr 049B                    _delay 051E  
   __end_of_clearcolumn1 0462     __end_of_clearcolumn2 0469     __end_of_clearcolumn3 0470  
   __end_of_clearcolumn4 0477           __CFG_BOREN$OFF 0000                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07D3  
           __end_of_main 07D3                   ??_main 007C                   ?_delay 0070  
           ?_send_config 0070                   _ADCON1 009F             ?_send_string 0070  
       __end_of_lcd_goto 04B1                ??_e_pulse 0078         __end_of_scanrow1 0566  
       __end_of_scanrow2 066E         __end_of_scanrow3 06FC         __end_of_scanrow4 05E0  
              ??_lcd_clr 0079           _password_count 007C  __end_of__initialization 07FC  
         __pcstackCOMMON 0070       __size_of_beep_once 0012             __pidataBANK0 0455  
          __end_of_delay 0541    __size_of_clearcolumn1 0007    __size_of_clearcolumn2 0007  
  __size_of_clearcolumn3 0007    __size_of_clearcolumn4 0007                  ??_delay 0074  
             _beep_twice 0566               __pbssBANK0 0020               __pmaintext 06FC  
           _clearcolumn1 045B             _clearcolumn2 0462             _clearcolumn3 0469  
           _clearcolumn4 0470       __size_of_send_char 0017        __end_of_beep_once 0489  
              ?_lcd_goto 0070               __stringtab 0003     __size_of_send_config 0017  
   __size_of_send_string 0020                ?_scanrow1 0070                ?_scanrow2 0070  
              ?_scanrow3 0070                ?_scanrow4 0070                  _e_pulse 04DF  
             _keyin_char 0020                  __ptext1 04FE                  __ptext2 0598  
                __ptext3 066E                  __ptext4 05E0                  __ptext5 0541  
                __ptext6 04C8                  __ptext7 049B                  __ptext8 0489  
                __ptext9 04B1                  _lcd_clr 0489              ?_beep_twice 0070  
             ??_lcd_goto 0079     end_of_initialization 07FC        __end_of_send_char 04DF  
             ??_scanrow1 007B               ??_scanrow2 007B               ??_scanrow3 007B  
             ??_scanrow4 007B            send_char@data 0078      __size_of_beep_twice 0032  
    start_initialization 07D3              __pdataBANK0 0026              __pbssCOMMON 007C  
              ___latbits 0002        __size_of_lcd_goto 0016                _beep_once 0477  
      __size_of_scanrow1 0025        __size_of_scanrow2 008E        __size_of_scanrow3 008E  
      __size_of_scanrow4 0048                 ?_e_pulse 0070                __pstrings 0003  
               ?_lcd_clr 0070            ??_send_config 0078           __size_of_delay 0023  
           ??_beep_twice 0078                delay@data 0070            ??_send_string 0079  
             ?_beep_once 0070                _send_char 04C8       __end_of_beep_twice 0598  
            __stringbase 0008      __end_of_send_config 04C8               ?_send_char 0070  
           send_string@i 007A             send_string@s 007B      __end_of_send_string 051E  
     __end_of__stringtab 0009         __size_of_e_pulse 001F         __size_of_lcd_clr 0012  
               __ptext10 04DF                 __ptext11 0470                 __ptext12 0469  
               __ptext13 0462                 __ptext14 045B                 __ptext15 0566  
               __ptext16 0477                 __ptext17 051E                 _lcd_goto 049B  
            ??_beep_once 0078            __size_of_main 00D7                 _scanrow1 0541  
               _scanrow2 05E0                 _scanrow3 066E                 _scanrow4 0598  
          ?_clearcolumn1 0070            ?_clearcolumn2 0070            ?_clearcolumn3 0070  
          ?_clearcolumn4 0070              _send_config 04B1              _send_string 04FE  
            ??_send_char 0078                stringcode 0003           ??_clearcolumn1 0070  
         ??_clearcolumn2 0070           ??_clearcolumn3 0070           ??_clearcolumn4 0070  
               stringdir 0003                 stringtab 0003  
